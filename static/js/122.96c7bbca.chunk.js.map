{"version":3,"file":"static/js/122.96c7bbca.chunk.js","mappings":"kQAEaA,EAAeC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mC,SCAzBC,EAAoBH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mC,SCE9BE,EAAc,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC5BC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GAEnBI,GAA0BC,EAAAA,EAAAA,WAAS,WACjC,OAAOH,EAAaI,IAAI,UAAY,EACtC,IAAEC,GAAAJ,EAAAA,EAAAA,GAAAC,EAAA,GAFKI,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAStB,OACEG,EAAAA,EAAAA,KAACd,EAAiB,CAAAe,UAChBC,EAAAA,EAAAA,MAAA,QAAMb,SAPW,SAAAc,GACnBA,EAAEC,iBACFf,EAASS,EAAMO,OACjB,EAIiCJ,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SAAOF,MAAOA,EAAOQ,SAAU,SAAAH,GAAC,OAAIJ,EAASI,EAAEI,OAAOT,MAAM,KAC5DE,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAAQP,SAAC,eAI9B,E,oCC0CA,EAzDe,WACb,IAAAX,GAAwCC,EAAAA,EAAAA,MAAiBkB,GAAAhB,EAAAA,EAAAA,GAAAH,EAAA,GAAlDE,EAAYiB,EAAA,GAAEC,EAAeD,EAAA,GAC9BE,EAAQnB,EAAaI,IAAI,SAE/BF,GAA4BC,EAAAA,EAAAA,UAAS,MAAKE,GAAAJ,EAAAA,EAAAA,GAAAC,EAAA,GAAnCkB,EAAMf,EAAA,GAAEgB,EAAShB,EAAA,GACxBiB,GAA0BnB,EAAAA,EAAAA,UAAS,MAAKoB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCvB,EAAAA,EAAAA,WAAS,GAAMwB,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAqC9B,OArBAG,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAIA,IAAMY,EAAkB,eAAAnC,GAAAoC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAnBX,GAAa,GAAMS,EAAAE,KAAA,GACWC,EAAAA,EAAAA,IAAqB,CAAEC,QAASvB,IAAS,KAAD,EAClD,GADkDgB,EAAAG,EAAAK,KAA9DP,EAAMD,EAANC,OAAQC,EAAGF,EAAHE,IAChBR,GAAa,IAETQ,EAAI,CAADC,EAAAE,KAAA,SACS,OAAdf,EAASY,GAAKC,EAAAM,OAAA,kBAIhBvB,EAAUe,GAAQ,yBAAAE,EAAAO,OAAA,GAAAX,EAAA,KACnB,kBAXuB,OAAAtC,EAAAkD,MAAA,KAAAC,UAAA,KAaxBhB,GAfA,CAgBF,GAAG,CAACZ,KAGFT,EAAAA,EAAAA,MAACpB,EAAY,CAAAmB,SAAA,EACXD,EAAAA,EAAAA,KAACb,EAAW,CAACE,SArCG,SAAA6C,GACdd,IAICc,GACHrB,EAAU,MAGZH,GAAe8B,EAAAA,EAAAA,GAAC,CAAC,EACXN,EAAU,CAAEvB,MAAOuB,GAAY,OAEvC,IA0BKlB,GACCd,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAAAxC,SAAA,CAAC,wCAAsCe,KAChDI,GACFpB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAmB,KAEpB1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CAAC/B,OAAQA,MAI5B,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/SearchBlock/SearchBlock.styled.jsx","pages/Movies/SearchBlock/SearchBlock.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesStyled = styled.div`\n  padding: 10px 15px 0;\n`;\n","import styled from 'styled-components';\n\nexport const SearchBlockStyled = styled.div`\n  padding-bottom: 10px;\n`;\n","import { useState } from 'react';\nimport { SearchBlockStyled } from './SearchBlock.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchBlock = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n\n  const [value, setValue] = useState(() => {\n    return searchParams.get('query') || '';\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value.trim());\n  };\n\n  return (\n    <SearchBlockStyled>\n      <form onSubmit={handleSubmit}>\n        <input value={value} onChange={e => setValue(e.target.value)} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </SearchBlockStyled>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { MoviesStyled } from './Movies.styled';\nimport { SearchBlock } from './SearchBlock/SearchBlock';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesByKeyword } from '../../api/moviedb';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { WrapStyled } from '../Home/Home.styled';\nimport { FullContainerLoader } from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const startSearch = keyword => {\n    if (isLoading) {\n      return;\n    }\n\n    if (!keyword) {\n      setMovies(null);\n    }\n\n    setSearchParams({\n      ...(keyword ? { query: keyword } : null),\n    });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMoviesByKeyword = async () => {\n      setIsLoading(true);\n      const { result, err } = await fetchMoviesByKeyword({ keyword: query });\n      setIsLoading(false);\n\n      if (err) {\n        setError(err);\n        return;\n      }\n\n      setMovies(result);\n    };\n\n    getMoviesByKeyword();\n  }, [query]);\n\n  return (\n    <MoviesStyled>\n      <SearchBlock onSubmit={startSearch} />\n      {error ? (\n        <WrapStyled>Error happened while loading movies: {error}</WrapStyled>\n      ) : isLoading ? (\n        <FullContainerLoader />\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </MoviesStyled>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesStyled","styled","_templateObject","_taggedTemplateLiteral","SearchBlockStyled","SearchBlock","_ref","onSubmit","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","get","_useState2","value","setValue","_jsx","children","_jsxs","e","preventDefault","trim","onChange","target","type","_useSearchParams2","setSearchParams","query","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","getMoviesByKeyword","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMoviesByK","result","err","_context","prev","next","fetchMoviesByKeyword","keyword","sent","abrupt","stop","apply","arguments","_objectSpread","WrapStyled","FullContainerLoader","MoviesList"],"sourceRoot":""}