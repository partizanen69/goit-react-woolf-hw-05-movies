{"version":3,"file":"static/js/336.20eb1a97.chunk.js","mappings":"mRAEaA,E,OAAaC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4I,kBC6DpC,EAvDa,WAAO,IAADC,EACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACWC,EAAAA,EAAAA,IAAe,CAAExB,QAAAA,IAAW,KAAD,EAAtC,GAAsCkB,EAAAG,EAAAI,KAAjDN,EAAMD,EAANC,SAAQC,EAAGF,EAAHE,KACR,CAADC,EAAAE,KAAA,QACS,OAAdZ,EAASS,GAAKC,EAAAK,OAAA,iBAGhBnB,EAAQY,GAAQ,wBAAAE,EAAAM,OAAA,GAAAV,EAAA,KACjB,kBAPiB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASlBhB,GACF,GAAG,CAACb,IAEAU,GAEAoB,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAAC,SAAA,CAAC,+CACmChC,EAAQ,KAAGU,KAKjD,OAATJ,GACK2B,EAAAA,EAAAA,KAACC,EAAAA,EAAmB,CAACC,cAAc,OAAOC,WAAW,UAIxD,OAAJ9B,QAAI,IAAJA,GAAU,QAANP,EAAJO,EAAMA,YAAI,IAAAP,OAAN,EAAJA,EAAYsC,UACVJ,EAAAA,EAAAA,KAACtC,EAAU,CAAAqC,SACR1B,EAAKA,KAAKgC,KAAI,SAAAC,GAAI,OACjBT,EAAAA,EAAAA,MAAA,OAAKU,UAAU,YAAWR,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEQ,IACEF,EAAKG,aAAY,mCAAAC,OACsBJ,EAAKG,cAAY,GAAAC,OACjDC,EAAAA,EAAS,qBAElBC,IAAKN,EAAKO,eAGdhB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,cAAYO,EAAKO,cACvBhB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,UAAQO,EAAKQ,UACf,KAKhB,C","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  .cast-item {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { WrapStyled } from '../../pages/Home/Home.styled';\nimport { FullContainerLoader } from '../Loader/Loader';\nimport { fetchMovieCast } from '../../api/moviedb';\nimport { CastStyled } from './CastStyled';\nimport { BASE_PATH } from '../App.consts';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      const { result, err } = await fetchMovieCast({ movieId });\n      if (err) {\n        setError(err);\n        return;\n      }\n      setCast(result);\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  if (error) {\n    return (\n      <WrapStyled>\n        Error happened while loading cast for movie {movieId}: {error}\n      </WrapStyled>\n    );\n  }\n\n  if (cast === null) {\n    return <FullContainerLoader paddingBottom=\"10px\" paddingTop=\"10px\" />;\n  }\n\n  return (\n    cast?.cast?.length && (\n      <CastStyled>\n        {cast.cast.map(item => (\n          <div className=\"cast-item\">\n            <div>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${item.profile_path}`\n                    : `${BASE_PATH}/default-w200.jpg`\n                }\n                alt={item.character}\n              />\n            </div>\n            <span>Character: {item.character}</span>\n            <span>Actor: {item.name}</span>\n          </div>\n        ))}\n      </CastStyled>\n    )\n  );\n};\n\nexport default Cast;\n"],"names":["CastStyled","styled","_templateObject","_taggedTemplateLiteral","_cast$cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","useEffect","getMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","result","err","_context","prev","next","fetchMovieCast","sent","abrupt","stop","apply","arguments","_jsxs","WrapStyled","children","_jsx","FullContainerLoader","paddingBottom","paddingTop","length","map","item","className","src","profile_path","concat","BASE_PATH","alt","character","name"],"sourceRoot":""}